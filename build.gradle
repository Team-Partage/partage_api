plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.15'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.egatrap'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

jar {
    enabled = false // Disable the default JAR task # plain JAR 제외
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

//	+------------------------------------------------------------------------+
//	| Web															         |
//	+------------------------------------------------------------------------+
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

//	+------------------------------------------------------------------------+
//	| Data														             |
//	+------------------------------------------------------------------------+
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    //Google Cloud Platform Storage(GCP Storage)
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-gcp-starter', version: '1.2.5.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-gcp-storage', version: '1.2.5.RELEASE'


//	+------------------------------------------------------------------------+
//	| Security														         |
//	+------------------------------------------------------------------------+
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.6'

    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    // 전체 프로젝트에서 guava-jdk5 제외
    configurations.all {
        exclude group: 'com.google.guava', module: 'guava-jdk5'
    }

//   +------------------------------------------------------------------------+
//   | Client                                                                 |
//   +------------------------------------------------------------------------+
    implementation 'com.google.api-client:google-api-client:1.23.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
    implementation 'com.google.apis:google-api-services-youtube:v3-rev222-1.25.0'

//	+------------------------------------------------------------------------+
//	| Utils														             |
//	+------------------------------------------------------------------------+
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.modelmapper:modelmapper:2.4.4'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

//	+------------------------------------------------------------------------+
//  | Development tools													     |
//	+------------------------------------------------------------------------+
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

//	+------------------------------------------------------------------------+
//  | Additional dependency for Mac OS												     |
//	+------------------------------------------------------------------------+
    if (isAppleSilicon()) {
        runtimeOnly("io.netty:netty-resolver-dns-native-macos:4.1.94.Final:osx-aarch_64")
    }

//	+------------------------------------------------------------------------+
//	| Test														             |
//	+------------------------------------------------------------------------+
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

static def isAppleSilicon() {
    return System.getProperty("os.name") == "Mac OS X" && System.getProperty("os.arch") == "aarch64"
}

tasks.named('test') {
    useJUnitPlatform()
}
